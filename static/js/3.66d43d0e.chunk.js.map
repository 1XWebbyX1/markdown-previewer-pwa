{"version":3,"sources":["data/strings.js","components/Background.js","redux/store.js","components/Wrapper.js","redux/utilities/mapping-functions.js"],"names":["__webpack_require__","r","__webpack_exports__","d","placeholder","info","darkScheme","lightScheme","Editor","asyncComponent","e","then","bind","module","default","Preview","Promise","all","resolve","Background","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","markdown","faInfoCircle","handleChange","assertThisInitialized","switch","toggleInfo","save","animate","theme","on","back","addText","target","value","faArrowLeft","setState","obj","document","documentElement","style","setProperty","t","$","text","addClass","setTimeout","removeClass","react_default","a","createElement","class","id","index_es","icon","faSave","onClick","faToggleOn","onChange","React","Component","store","createStore","arguments","length","undefined","action","type","Container","connect","dispatch","addingInput","Wrapper","es"],"mappings":"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","file":"static/js/3.66d43d0e.chunk.js","sourcesContent":["//placeholder String for Editor Component---------\nexport const placeholder =\n`# Welcome to my React Markdown Previewer!\n\n// To find what this can do, view our sample text below or start editing in the editor and see the results rendered in the previewer.\n\n## For more information, click on the info icon at the top right corner of the screen\n### Here's the sample to show you some cool stuff:\n\nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](./images/react.svg'), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbererd lists too.\n1. Use just 1s if you want!\n1. But the list goes on...\n- Even if you use dashes or asterisks.\n* And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://goo.gl/Umyytc)\n`\n\n//info string--------------------\nexport const info = `\n # HI!\n ## You just found a Markdown Previewer\n\nMarkdown is a text-to-HTML conversion tool for web writers. Markdown allows you to write using an easy-to-read, easy-to-write plain text format, then convert it to structurally valid XHTML (or HTML).\n\nTo see what this can do,\nStart writing plain text in the editor or load our sample text by clicking on the back icon at the top right corner of the screen and quickly see the text rendered in the Markdown Previewer.\n\nHere is a tip--\n♥ You can switch the theme using the toggle button at the top right corner of the screen ♥\n\n\nImportant Note: The state will be saved until editor is reloaded. To open embedded links, switch to a new tab or data in editor will be lost.\n\n`;\n","import React from 'react'\nimport $ from 'jquery'\nimport asyncComponent from './asyncComponent/async'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faToggleOn, faInfoCircle, faSave, faArrowLeft  } from '@fortawesome/free-solid-svg-icons'\n\n\n\n\n//async imports -____________________________________________________________\nconst Editor = asyncComponent(() =>\n        import('./Editor').then(module => module.default)\n        );\n\nconst Preview = asyncComponent(() =>\n       import('./Previewer').then(module => module.default)\n       );\n\nvar placeholder;\n import('../data/strings')\n                .then((module) => {\n                  placeholder = module.placeholder;\n                });\nvar info;\n  import('../data/strings')\n     .then((module) => {\n        info = module.info;\n    });\n\nvar darkScheme;\n  import('../data/themes')\n       .then((module) => {\n            darkScheme = module.darkScheme;\n      });\n\n  var lightScheme;\n    import('../data/themes')\n       .then((module) => {\n          lightScheme = module.lightScheme;\n      });\n\n//---------------------------------------------------------------------------\n\n\n\nclass Background extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      markdown: placeholder,\n      info: faInfoCircle,\n      placeholder: placeholder\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.switch = this.switch.bind(this);\n    this.toggleInfo = this.toggleInfo.bind(this);\n    this.save = this.save.bind(this);\n    this.animate = this.animate.bind(this);\n    this.theme = 'dark';\n    this.on = true;\n    this.back = false;\n  }\n\n  //handle change of input in editor--------------\n  handleChange(e){\n    this.props.addText(e.target.value);\n  }\n\n  //toggle info --------------\n  toggleInfo() {\n    if(this.props.markdown !== info){\n       this.props.addText(info);\n    }\n    else this.props.addText(this.state.placeholder);\n\n    if(this.state.info === faArrowLeft){\n      this.setState({\n        info: faInfoCircle\n      })\n    }else{\n      this.setState({\n        info: faArrowLeft\n      })\n    }\n\n  }\n\n  //handle switch for theme change ------------------\n  switch(){\n    if(this.theme === 'dark') {\n      for(let obj in lightScheme){\n         document.documentElement.style.setProperty(obj, lightScheme[obj]);\n       }\n      this.theme = 'light';\n    } else {\n         for(let obj in darkScheme){\n            document.documentElement.style.setProperty(obj, darkScheme[obj]);\n          }\n         this.theme = 'dark';\n    }\n\n    //toggle blink animation ----------------------------------------\n      import ('../sass/03-utilities/_animations.scss')\n      .then(this.animate);\n     }\n\n\n     save(){\n       this.setState({placeholder : $('.editor textarea').text()});\n     }\n\n\n animate(){\n   $(\".back\").addClass('blinks');\n   setTimeout(function() {\n     $(\".back\").removeClass('blinks');\n   }, 2000);\n}\n\n  render() {\n    return (\n       <div class=\"back\">\n         <div id='taskbar'>\n          <FontAwesomeIcon id=\"save\" icon={faSave} onClick={this.save} />\n          <FontAwesomeIcon id=\"info\" onClick={this.toggleInfo} icon={this.state.info} />\n          <FontAwesomeIcon id=\"theme-switch\" icon={faToggleOn} onClick={this.switch} />\n         </div>\n        <div class=\"parent\">\n         <Editor markdown={this.props.markdown} onChange={this.handleChange}/>\n         <Preview markdown={this.props.markdown}/>\n        </div>\n       </div>\n    );\n  }\n};\n\n\nexport default Background;\n","import {createStore} from 'redux'\nimport {placeholder} from '../data/strings'\n\n\nconst ADDTEXT = 'ADDTEXT';\n\n//redux action creator_____________________________________________\nexport const addingInput = (markdown) => {\n  return {\n   type: ADDTEXT,\n   markdown: markdown\n  };\n};\n//--------------------------------------------------------------------\n\n//redux reducer function_____________________________________________\nconst reducer = (state = {markdown: placeholder}, action) => {\n  switch(action.type){\n    case ADDTEXT : return {markdown: action.markdown};\n    default: return state;\n  };\n};\n//----------------------------------------------------------------\n\n\n//declaring redux store___________________________________________\nconst store = createStore(reducer);\n//------------------------------------------------\n\nexport default store;\n","import React from 'react'\nimport {connect} from 'react-redux'\nimport { Provider } from 'react-redux'\nimport Background from './Background'\nimport store from '../redux/store'\nimport {mapStateToProps} from '../redux/utilities/mapping-functions'\nimport {mapDispatchToProps} from '../redux/utilities/mapping-functions'\n\n\n//Create a redux react connected component---------------\n\nconst Container = connect(mapStateToProps, mapDispatchToProps)(Background);\n\n//wrapping app to work with redux---------------\nclass Wrapper extends React.Component {\n  render () {\n     return (\n      <Provider store={store}>\n        <Container />\n       </Provider>\n     );\n  }\n}\n\nexport default Wrapper;\n","import {addingInput} from '../store'\n\n//mapping state and props to Redux to manage state-------\nexport  const mapStateToProps = (state)  => {\n  return {\n    markdown : state.markdown,\n  };\n};\n\nexport const mapDispatchToProps = (dispatch) => {\n  return {\n    addText : function(markdown) {\n        dispatch(addingInput(markdown));\n    }\n  };\n};\n"],"sourceRoot":""}