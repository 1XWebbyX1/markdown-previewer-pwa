{"version":3,"sources":["components/Wrapper/Editor/Toolbar/Toolbar.js","components/Wrapper/Editor/Editor.js","components/Wrapper/Previewer/Previewer.js","components/Wrapper/Header/Header.js","components/Wrapper/Wrapper.js","components/Wrapper/sessionStorageManager.js","components/redux/store.js","components/redux/data/strings.js","components/AppWrapper.js","App.js","index.js"],"names":["Toolbar","react_default","a","createElement","className","this","props","index_es","icon","faInfoCircle","onClick","toggleInfo","faBold","faItalic","faImage","faLink","faCode","faToggleOn","switchTheme","React","Component","Editor","forwardRef","ref","Editor_Toolbar_Toolbar","headerClass","onChange","value","markdown","textareaClass","type","renderer","marked","Renderer","link","href","title","text","concat","code","language","setOptions","breaks","Previewer","_ref","id","dangerouslySetInnerHTML","__html","Header","head","faExpandArrowsAlt","SSM","key","item","sessionStorage","setItem","getItem","removeItem","Wrapper","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","bind","assertThisInitialized","insertAtCaret","insertStyle","setTextSelect","handleClick","expandEditor","expandPreviewer","info","showInfo","textarea","createRef","_this2","__webpack_require__","e","then","module","placeholder","catch","err","addText","toggleAnimClass","setTimeout","theme","editorView","setView","previewerView","target","field","current","document","selection","focus","preventScroll","createRange","selectionStart","startPos","save","endPos","selectionEnd","substring","length","charLength","caretStart","caretEnd","get","setSelectionRange","undefined","insert","replace","text_to_insert","currentTarget","baseVal","match","trim","animClass","Wrapper_Header_Header","Editor_Editor","Wrapper_Previewer_Previewer","initialState","store","createStore","state","arguments","action","wrapperClass","Container","connect","dispatch","addingInput","toggleTheme","ConnectedComponent","es","App","AppWrapper","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.72ac583f.chunk.js","sourcesContent":["import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faInfoCircle, faBold, faItalic, faLink, faCode, faImage, faToggleOn} from '@fortawesome/free-solid-svg-icons'\n\n\n\nclass Toolbar extends React.Component{\n\n  render(){\n    return(\n     <div className={'toolbar ' + this.props.className} >\n        <ul>\n         <li><FontAwesomeIcon className='icon info' icon={faInfoCircle} onClick={this.props.toggleInfo}/></li>\n         <li><FontAwesomeIcon className='icon bold' icon={faBold} onClick={this.props.onClick}/></li>\n         <li><FontAwesomeIcon className='icon italic' icon={faItalic} onClick={this.props.onClick}/></li>\n         <li><FontAwesomeIcon className='icon img' icon={faImage} onClick={this.props.onClick}/></li>\n         <li><FontAwesomeIcon className='icon link' icon={faLink} onClick={this.props.onClick}/></li>\n         <li><FontAwesomeIcon className='icon code' icon={faCode} onClick={this.props.onClick}/></li>\n         <li><FontAwesomeIcon className='icon toggle' icon={faToggleOn} onClick={this.props.switchTheme}/></li>\n       </ul>\n      </div>\n\n    )\n  }\n}\n\nexport default Toolbar;\n","import React from 'react'\nimport Toolbar from './Toolbar/Toolbar.js'\n\nconst Editor = React.forwardRef((props, ref) => (\n  <div className='editor'>\n      <Toolbar className={props.headerClass} onClick={props.onClick} switchTheme={props.switchTheme} toggleInfo={props.toggleInfo}/>\n      <textarea ref={ref} onChange={props.onChange} value={props.markdown} className={props.textareaClass} type=\"text\"/>\n  </div>\n));\n\n\nexport default Editor;\n","import React from 'react'\nimport marked from \"marked\"\n\nconst renderer = new marked.Renderer();\n\n// INSERTS target=\"_blank\" INTO HREF TAGS\nrenderer.link = function (href, title, text) {\n  return `<a target=\"_blank\" href=\"${href}\">${text}` + '</a>';\n}\nrenderer.code = function(code, language) {\n  return '<pre><code class=language-' + language + '>' + code + '</code></pre>';\n}\n\nmarked.setOptions({\n  breaks: true,\n});\n\n\nconst Previewer = ({markdown}) => (\n  <div className=\"textarea preview\">\n    <div id=\"view\" dangerouslySetInnerHTML={{__html: marked(\n            markdown, { renderer: renderer })}} />\n   </div>\n)\n\n\nexport default Previewer;\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faExpandArrowsAlt} from '@fortawesome/free-solid-svg-icons'\n\n\nconst Header = ({id, head, headerClass, onClick}) => (\n  <div id={id} className={\"header \" + headerClass} >\n     <h3>{head}</h3>\n     <FontAwesomeIcon className='arrows' icon={faExpandArrowsAlt} onClick={onClick}/>\n  </div>\n)\n\n\nexport default Header;\n","import React from 'react'\nimport Editor from './Editor/Editor.js'\nimport Previewer from './Previewer/Previewer.js'\nimport Header from './Header/Header.js'\nimport SessionStorageManager from './sessionStorageManager'\n\n//session storage to preserve caret position in editor\nconst SSM = new SessionStorageManager();\n\nclass Wrapper extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.insertAtCaret = this.insertAtCaret.bind(this);\n    this.insertStyle = this.insertStyle.bind(this);\n    this.setTextSelect = this.setTextSelect.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.toggleInfo = this.toggleInfo.bind(this);\n    this.switchTheme = this.switchTheme.bind(this);\n    this.expandEditor = this.expandEditor.bind(this);\n    this.expandPreviewer = this.expandPreviewer.bind(this);\n    this.info = '';\n    this.markdown = '';\n    this.showInfo = false;\n    this.textarea = React.createRef();\n  }\n\n  componentDidMount(){\n    import('./data/strings')\n    .then(module => {\n      this.info = module.info;\n      this.markdown = module.placeholder;\n    })\n    .catch(err => {\n      this.info = '# For info visit https://marked.js.org/#/README.md';\n    })\n  }\n\n  toggleInfo(){\n    this.showInfo = !this.showInfo; //show placeholder or info based on boolean\n    (this.showInfo)  ? //condition for info on display\n     this.props.addText(this.info) : //if true\n     this.props.addText(this.markdown); //if false\n  }\n\n  switchTheme(){\n    this.props.toggleAnimClass('blinks'); //add class\n    setTimeout(function(){\n      this.props.toggleAnimClass('');//remove class\n    }.bind(this), 1500);\n\n     (this.props.theme === \"dark\")  ? //condition for dark theme\n      this.props.switchTheme('light') : //if true\n      this.props.switchTheme('dark'); //if false\n  }\n\n  expandEditor(){\n    (this.props.editorView === \"\")  ? //condition for normal editor view mode\n     this.props.setView('fullScreen', 'minimize') : //if true\n     this.props.setView('', ''); //if false\n  }\n\n  expandPreviewer(){\n    (this.props.previewerView === \"\")  ? //condition for normal previewer view mode\n     this.props.setView('minimize', 'fullScreen') : //if true\n     this.props.setView('', ''); //if false\n  }\n\n  handleChange(e){\n     this.props.addText(e.target.value); //update on editor input field change\n  }\n\n  insertAtCaret(value){\n    var field = this.textarea.current;\n    if(document.selection){ //older IE support\n       field.focus({preventScroll:true});\n       var selection = document.selection.createRange();\n       selection.text = value;\n    }else if(field.selectionStart || field.selectionStart == '0'){ //other browsers\n        let startPos = field.selectionStart;\n        SSM.save('position', startPos);\n        let endPos = field.selectionEnd;\n        field.value = field.value.substring(0, startPos) + value + field.value.substring(endPos, field.value.length);\n        field.focus({preventScroll:true});\n        this.setTextSelect(startPos + this.charLength, startPos + value.length - this.charLength);\n    }else {\n       field.focus();\n       field.value += value;\n    }\n  }\n\n  setTextSelect(caretStart, caretEnd){ //selected text when string is inserted\n     var field = this.textarea.current;\n     if(caretStart == -1){ //for undo case\n        caretStart = SSM.get('position');\n        field.setSelectionRange(caretStart, caretStart);\n     }else if(field.selectionStart){\n        field.setSelectionRange(caretStart, caretEnd);\n     }\n  }\n\n  insertStyle(value){\n    var field = this.textarea.current;\n    let startPos = field.selectionStart;\n    let endPos = field.selectionEnd;\n\n    if(value !== undefined){\n      if(!this.insert){ //to insert value\n        this.insert = true;\n        this.insertAtCaret(value);\n        SSM.save('insert', value);\n      }\n      else{ //to undo value insert\n        this.insert = false;\n        field.value = field.value.substring(0, startPos - SSM.get('insert').length) + field.value.substring(startPos - SSM.get('insert').length).replace(SSM.get('insert'), '');\n        this.setTextSelect(-1, -1);\n      }\n    }\n  }\n\n  handleClick(e){\n    let text_to_insert,\n     target = e.currentTarget.className.baseVal, //to extract class from font awesome svg\n     styleRegex = /\\sfa-[a-z]+\\s/, //extract fontawesome style\n     style = '' + target.match(styleRegex)[0].trim();\n\n    switch(style){\n      case 'fa-bold' :  text_to_insert = '**Strong Text**';\n                        this.charLength = 2;\n                        break;\n      case 'fa-italic' : text_to_insert = '_Emphasized Text_';\n                        this.charLength = 1;\n                        break;\n      case 'fa-code' : text_to_insert = '`Inline Code`';\n                        this.charLength = 1;\n                        break;\n      case 'fa-image' : text_to_insert = '![Alt Text](http://)';\n                       this.charLength = 0;\n                       break;\n      case 'fa-link' : text_to_insert = '[link](http://)';\n                       this.charLength = 0;\n                       break;\n      default: return;\n    }\n    this.insertStyle(text_to_insert);\n  }\n\n\n  render() {\n    return (\n      <div className={'wrapper-container ' + this.props.animClass}>\n         <div id=\"editor-wrap\" className={'flexbox-wrap ' + this.props.theme + ' ' + this.props.editorView}>\n           <Header id='editor-header' head=\"Editor\" headerClass={this.props.theme+'-headers'} onClick={this.expandEditor}/>\n           <Editor markdown={this.props.markdown} ref={this.textarea} onClick={this.handleClick} textareaClass={this.props.theme} headerClass={this.props.theme+'-headers'}\n           onChange={this.handleChange}  switchTheme={this.switchTheme} toggleInfo={this.toggleInfo}/>\n         </div>\n         <div id=\"previewer-wrap\" className={'flexbox-wrap ' + this.props.theme + ' ' + this.props.previewerView}>\n           <Header id='previewer-header' head=\"Previewer\" headerClass={this.props.theme +'-headers'} onClick={this.expandPreviewer}/>\n           <Previewer markdown={this.props.markdown} />\n         </div>\n       </div>\n    );\n  }\n}\n\nexport default Wrapper;\n","class SessionStorageManager {\n\n  save(key, item){\n    sessionStorage.setItem(key, item);\n  }\n\n  get(key){\n    return sessionStorage.getItem(key);\n  }\n\n  clear(key){\n    sessionStorage.removeItem(key);\n  }\n}\n\n\nexport default SessionStorageManager;\n","import {createStore} from 'redux'\nimport {placeholder} from './data/strings'\n\nconst ADDTEXT = 'ADDTEXT';\nconst TOGGLE_CLASS = 'TOGGLE_CLASS';\nconst SWITCH_THEME = 'SWITCH_THEME';\nconst SET_VIEW = 'SET_VIEW';\n\nconst initialState = {\n  markdown: placeholder,\n  animClass: '',\n  theme: 'dark',\n  editorView: '',\n  previewerView: ''\n}\n\n//redux action creator_____________________________________________\nexport const addingInput = (markdown) => {\n  return {\n   type: ADDTEXT,\n   markdown: markdown\n  };\n};\n\nexport const toggleAnim = (anim) => {\n  return {\n   type: TOGGLE_CLASS,\n   animClass: anim\n  };\n};\n\nexport const toggleTheme = (theme) => {\n  return {\n   type: SWITCH_THEME,\n   theme: theme\n  };\n};\n\nexport const setView = (editor, previewer) => {\n  return {\n   type: SET_VIEW,\n   editorView: editor,\n   previewerView: previewer\n  };\n};\n\n//--------------------------------------------------------------------\n\n//redux reducer function_____________________________________________\nconst reducer = (state = initialState, action) => {\n  switch(action.type){\n    case ADDTEXT : return {markdown: action.markdown, wrapperClass: state.wrapperClass, theme: state.theme, editorView: state.editorView, previewerView: state.previewerView};\n    case TOGGLE_CLASS : return {markdown: state.markdown, animClass: action.animClass, theme: state.theme, editorView: state.editorView, previewerView: state.previewerView};\n    case SWITCH_THEME : return {markdown: state.markdown, animClass: state.animClass, theme: action.theme, editorView: state.editorView, previewerView: state.previewerView};\n    case SET_VIEW : return {markdown: state.markdown, animClass: state.animClass, theme: state.theme, editorView: action.editorView, previewerView: action.previewerView};\n    default: return state;\n  };\n};\n//----------------------------------------------------------------\n\n\n//declaring redux store___________________________________________\nconst store = createStore(reducer);\n//------------------------------------------------\n\nexport default store;\n","//placeholder String for Editor Component---------\nexport const placeholder =\n`# Welcome to my React Markdown Previewer!\n\n// To find what this can do, view our sample text below or start editing in the editor and see the results rendered in the previewer.\n\n## For more information, click on the info icon at the top right corner of the screen\n### Here's the sample to show you some cool stuff:\n\nHeres some code, \\`<div></div>\\`, between 2 back ticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](./images/react.svg'), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbered lists too.\n1. Use just 1s if you want!\n1. But the list goes on...\n- Even if you use dashes or asterisks.\n* And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://goo.gl/Umyytc)\n`\n","import React from 'react'\nimport Wrapper from './Wrapper/Wrapper.js'\nimport {connect} from 'react-redux'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\nimport {addingInput, toggleAnim, toggleTheme, setView} from './redux/store'\n\nconst mapStateToProps = (state)  => {\n  return {\n    markdown : state.markdown,\n    animClass: state.animClass,\n    theme: state.theme,\n    editorView: state.editorView,\n    previewerView: state.previewerView\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addText : function(markdown) {\n        dispatch(addingInput(markdown));\n    },\n    toggleAnimClass : function(className) {\n        dispatch(toggleAnim(className));\n    },\n    switchTheme : function(theme) {\n        dispatch(toggleTheme(theme));\n    },\n    setView : function(editorView, previewerView) {\n        dispatch(setView(editorView, previewerView));\n    },\n  };\n};\n\nconst Container = connect(mapStateToProps, mapDispatchToProps)(Wrapper);\n\n//wrapping app to work with redux---------------\nclass ConnectedComponent extends React.Component {\n  render () {\n     return (\n      <Provider store={store}>\n        <Container />\n       </Provider>\n     );\n  }\n}\n\nexport default ConnectedComponent;\n","import React, { Component } from 'react';\nimport './App.scss';\nimport Wrapper from './components/AppWrapper.js'\n\nclass App extends Component {\n  render() {\n    return (\n      <Wrapper />\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'babel-polyfill';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}